#!/usr/bin/env node
var debug = require('debug')('piquarium');
var app = require('../app');
var fs = require('fs');
var path = require('path');
var config = require('config');
var scheduler = require('../modules/scheduler.js');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

// Add Socket.IO to global namespace
global.io = require('socket.io')(server);

// Get Camera Enabled Setting from Config
var cameraEnabled = config.get('camera.enabled');
console.log('Camera Enabled: ' + cameraEnabled);

// If there's a camera then spawn a process
if(cameraEnabled === true){
  var spawn = require('child_process').spawn;
  var proc;

  // Temp container for sockets
  var sockets = {};

  // On Client Connection
  global.io.on('connection', function(socket) {

    sockets[socket.id] = socket;
    console.log("Total clients connected : ", Object.keys(sockets).length);

    socket.on('disconnect', function() {
      delete sockets[socket.id];

      // no more sockets, kill the stream
      if (Object.keys(sockets).length == 0) {
        app.set('watchingFile', false);
        if (proc) proc.kill();
        fs.unwatchFile('./public/images/image_stream.jpg');
      }
    });

    socket.on('start-stream', function() {
      startStreaming(global.io);
    });

    socket.on('stop-stream', function() {
      console.log('Stop Stream Socket Handled...');
      stopStreaming();
    });

  });
};

// Stop Streaming
function stopStreaming() {
  //if (Object.keys(sockets).length == 0) {
    app.set('watchingFile', false);
    if (proc) proc.kill();
    fs.unwatchFile('./public/images/image_stream.jpg');
  //}
};

// Start Streaming
function startStreaming(io) {
  if (app.get('watchingFile')) {
    io.sockets.emit('liveStream', '/images/image_stream.jpg?_t=' + (Math.random() * 100000));
    return;
  };

  // Kick of Raspistill
  var args = ["-w", "480", "-h", "240", "-o", "./public/images/image_stream.jpg", "-t", "999999999", "-tl", "100"];
  proc = spawn('raspistill', args);

  console.log('Watching for changes...');
  app.set('watchingFile', true);

  // Watch changes on the file Raspistill is changing
  fs.watchFile('./public/images/image_stream.jpg', function(current, previous) {
    io.sockets.emit('liveStream', '/images/image_stream.jpg?_t=' + (Math.random() * 100000));
  });

};
